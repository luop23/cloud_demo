server:
  port: 5679

spring:
  application:
    name: cloud-rocketmq-order
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource    #当前数据源操作类型
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/seata_order?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
      username: root
      password: 1234
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848   #nacos地址
    #        server-addr: 192.168.5.3:8009   #nginx地址
    sentinel:
      transport:
        dashboard: 127.0.0.1:9527   #配置sentinel dashboard地址  自定义sentinel-dashboard端口
        port: 8719
    #stream配置
    stream:
      rocketmq:
        binder:
          name-server: 192.168.5.3:9876    #rocketMq服务器地址
          #配置事务属性
        bindings:
          output:
            producer:
              group: tx-order-group   #要与@RocketMQTransactionListener(txProducerGroup = "tx-order-group")一致
              transactional: true   #开启事务消息
      bindings:
        #生产者
        output:
          destination: orderTopic_rocketmq    #topic
          content-type: application/json

mybatis-plus:
  mapper-locations: classpath:mapperxml/*.xml
  type-aliases-package: com.luop.entity    #所有entity别名类所在包
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl    #打印日志到控制台

#监控
management:
  endpoints:
    web:
      exposure:
        include: '*'

#日志配置
logging:
  level:
    com.alibaba.nacos.client.naming: error    #关闭nacos定时检测
    com.luop.service: debug   #开启指定包下feign日志

#配置ribbon负载均衡策略
#cloud-payment-service:    #服务提供方的服务名
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule   #随机策略,默认为轮询策略

#设置Feign客户端超时时间（openfeign默认支持ribbon）
feign:
  sentinel:
    enabled: false     #配置feign对sentinel的支持
  client:
    config:
      default:
        connectTimeout: 1000  #建立连接所用时间，单位毫秒
        readTimeout: 1000   #建立连接后从服务器读取到可用资源所用的时间，单位毫秒